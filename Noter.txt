// Noter:

// Databasen er en Postgresql, som kører gennem Docker. Det gør den fordi jeg havde problemer med at få noget andet til at virke på min laptop.
// Tilgå databasen gennem Docker commandline:
// docker exec -it postgres bash - connect til docker containeren i den egen terminal
// psql -U mart624i - tilgå postresql databasen som mart624i
// \l - se liste over databaser
// \c city - connect til city
// \d og \dt se liste over table relationer
// select * from city; - se hvad der ligger i 'city'-table

// Det har desværre ikke lykkedes mig at få hele applikationen ind i Docker. Det er kun databasen, som kører deri.
// docker-compose.yml-filen er altså bare den med databasen. 
// Jeg har givet forsøg på en anden implementation. Koden kan ses nedenfor. Der er både et forsøg på en docker-compose og en Dockerfile.

Kode til docker-compose-fil:
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - db
  db:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: mart624i
      POSTGRES_PASSWORD: pw123
      PGDATA: /data/postgres
    volumes:
      - db:/data/postgres
    ports:
      - "5332:5432"
    networks:
      - db
    restart: unless-stopped

networks:
  db:
    driver: bridge

volumes:
  db:

Kode til Dockerfile:
Dockerfile:
FROM openjdk:17-jdk-alpine AS BASE

WORKDIR /app

COPY target/trifork-opg.jar app.jar

EXPOSE 8080

CMD ["java", "-jar", "app.jar"]